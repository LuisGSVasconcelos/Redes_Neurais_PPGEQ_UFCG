# separate fitting and validation data 
from sklearn.model_selection import train_test_split 
`
57
x_fit, x_val, y_fit, y_val = train_test_split(x, y, test_size=0.2, random_state=1) 
 
# assess performance on validation sets for different hyperparameter values 
from sklearn.metrics import mean_squared_error as mse 
fit_MSEs = [] 
validation_MSEs = [] 
 
for poly_degree in range(1,6): 
 # set hyper-parameter value 
 pipe['poly'].degree = poly_degree 
 # fit & predict 
 pipe.fit(x_fit, y_fit) 
 y_pred_fit = pipe.predict(x_fit) 
 y_pred_val = pipe.predict(x_val) 
 # compute scores and append 
 fit_MSE = mse(y_fit, y_pred_fit) 
 validation_MSE = mse(y_val, y_pred_val) 
 fit_MSEs.append(fit_MSE), validation_MSEs.append(validation_MSE) 
 
# plot validation curve 
from matplotlib import pyplot as plt 
plt.figure() 
plt.plot(np.arange(1,6), fit_MSEs, 'b--', label='fitting MSEs') 
plt.plot(np.arange(1,6), validation_MSEs, 'g--', label='validation MSEs') 
plt.legend(), plt.xlabel('Polynomial degree'), plt.ylabel('MSE')
